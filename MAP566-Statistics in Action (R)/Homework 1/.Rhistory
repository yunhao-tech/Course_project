start = c(k=0.3, b=100, A=5, phi=1))
nlm1
sales1_plot +
geom_point(data = data.frame(sales1$time, y = nlm1 %>% predict(sales1)) + 100,
mapping = aes(x = sales1$time, y = nlm1 %>% predict(sales1)) + 100, size = 2, shape = 3, colour="red")
# nlm model
T <- 10
nlm1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales1,
start = c(k=0.3, b=100, A=5, phi=1))
nlm1
sales1_plot +
geom_point(data = data.frame(sales1$time, y = nlm1 %>% predict(sales1)),
mapping = aes(x = sales1$time, y = nlm1 %>% predict(sales1)), size = 2, shape = 3, colour="red")
# nlm model
nlm1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales1,
start = c(k=0.3, b=100, A=5, T=10, phi=1))
nlm1
sales1_plot +
geom_point(data = data.frame(sales1$time, y = nlm1 %>% predict(sales1)),
mapping = aes(x = sales1$time, y = nlm1 %>% predict(sales1)), size = 2, shape = 3, colour="red")
T <- 11.8
model2 <- lm(y ~ time + I(cos(time*2*pi/T)), sales1)
pred_set  <- model2 %>% predict(sales1)
model2
sales1_plot +
geom_point(data = data.frame(sales1$time, y = pred_set),
mapping = aes(x = sales1$time, y = pred_set), size = 2, shape = 3, colour="red")
summary(nlm1)
model1
summary(model1)
sales1_plot + geom_smooth(method = "lm", formula = y ~ x, se = FALSE, colour="#339900")
model1 <- lm(y~time, data=sales1)
par(mfrow=c(2,2))
plot(model1)
summary(model1)
# nlm model
nlm1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales1,
start = c(k=0.3, b=100, A=5, T=10, phi=1))
sales1_plot +
geom_point(data = data.frame(sales1$time, y = nlm1 %>% predict(sales1)),
mapping = aes(x = sales1$time, y = nlm1 %>% predict(sales1)), size = 2, shape = 3, colour="red")
summary(nlm1)
# nlm model
nlm1 <- nls(y ~ k*time + b + A*cos(time*2*pi/10 + phi), sales1,
start = c(k=0.3, b=100, A=5, phi=1))
sales1_plot +
geom_point(data = data.frame(sales1$time, y = nlm1 %>% predict(sales1)),
mapping = aes(x = sales1$time, y = nlm1 %>% predict(sales1)), size = 2, shape = 3, colour="red")
summary(nlm1)
# nlm model
nlm1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales1,
start = c(k=0.3, b=100, A=5, T=10, phi=1))
sales1_plot +
geom_point(data = data.frame(sales1$time, y = nlm1 %>% predict(sales1)),
mapping = aes(x = sales1$time, y = nlm1 %>% predict(sales1)), size = 2, shape = 3, colour="red")
summary(nlm1)
nlm1 <- nls(y ~ k*time + 100 + A*(cos(time*2*pi/T + phi) - cos(phi)), sales1,
start = c(k=0.3, b=100, A=5, T=10, phi=1))
nlm1 <- nls(y ~ k*time + 100 + A*(cos(time*2*pi/T + phi) - cos(phi)), sales1,
start = c(k=0.3, A=5, T=10, phi=5))
sales1_plot +
geom_point(data = data.frame(sales1$time, y = nlm1 %>% predict(sales1)),
mapping = aes(x = sales1$time, y = nlm1 %>% predict(sales1)), size = 2, shape = 3, colour="red")
summary(nlm1)
# nlm model
nlm1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales1,
start = c(k=0.3, b=100, A=5, T=10, phi=1))
sales1_plot +
geom_point(data = data.frame(sales1$time, y = nlm1 %>% predict(sales1)),
mapping = aes(x = sales1$time, y = nlm1 %>% predict(sales1)), size = 2, shape = 3, colour="red")
summary(nlm1)
nlm2 <- nls(y-100 ~ k*time + A*(cos(time*2*pi/T + phi) - cos(phi)), sales1,
start = c(k=0.3, A=5, T=10, phi=5))
sales1_plot +
geom_point(data = data.frame(sales1$time, y = (nlm2 %>% predict(sales1)) + 100),
mapping = aes(x = sales1$time, y = (nlm2 %>% predict(sales1)) + 100), size = 2, shape = 3, colour="red")
summary(nlm2)
?nls
nlm2 <- nls(y ~ k*time + A*(cos(time*2*pi/T + phi) - cos(phi)) + 100, sales1,
start = c(k=0.3, A=5, T=10, phi=5))
sales1_plot +
geom_point(data = data.frame(sales1$time, y = nlm2 %>% predict(sales1)),
mapping = aes(x = sales1$time, y = nlm2 %>% predict(sales1)), size = 2, shape = 3, colour="red")
summary(nlm2)
nlm2 %>% predict(data.frame(0, 150))
nlm2 %>% predict(data.frame(0))
nlm2 %>% predict(sales1)
nlm2 %>% predict(data.frame(0,1))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales <- predict(nlm1, newdata=pred_time)
perdiction1 <- pred_time %>% mutate(sales=pred_sales)
sales1_plot +
geom_line(data = prediction1, aes(x = time, y = sales, size = 2, shape = 3, colour="red"))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales <- predict(nlm1, newdata=pred_time)
prediction1 <- pred_time %>% mutate(sales=pred_sales)
sales1_plot +
geom_line(data = prediction1, aes(x = time, y = sales, size = 2, shape = 3, colour="red"))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales <- predict(nlm1, newdata=pred_time)
prediction1 <- pred_time %>% mutate(sales=pred_sales)
sales1_plot +
geom_line(data = prediction1, aes(x = time, y = sales, colour="red"))
# nlm model
nlm1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales1,
start = c(k=0.3, b=100, A=5, T=10, phi=1))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales <- predict(nlm1, newdata=pred_time)
prediction1 <- pred_time %>% mutate(sales=pred_sales)
sales1_plot +
geom_line(data = prediction1, aes(x = time, y = sales, colour="red"))
summary(nlm1)
nlm2 <- nls(y ~ k*time + A*(cos(time*2*pi/T + phi) - cos(phi)) + 100, sales1,
start = c(k=0.3, A=5, T=10, phi=5))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales2 <- predict(nlm2, newdata=pred_time)
prediction2 <- pred_time %>% mutate(sales=pred_sales2)
sales1_plot +
geom_line(data = prediction2, aes(x = time, y = sales, colour="red"))
summary(nlm2)
nlm2 <- nls(y ~ k*time + A*(cos(time*2*pi/T + phi) - cos(phi)) + 100, sales1,
start = c(k=0.3, A=3, T=10, phi=5))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales2 <- predict(nlm2, newdata=pred_time)
prediction2 <- pred_time %>% mutate(sales=pred_sales2)
sales1_plot +
geom_line(data = prediction2, aes(x = time, y = sales, colour="red"))
summary(nlm2)
nlm2 <- nls(y ~ k*time + A*(cos(time*2*pi/T + phi) - cos(phi)) + 100, sales1,
start = c(k=0.3, A=5, T=11, phi=5))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales2 <- predict(nlm2, newdata=pred_time)
prediction2 <- pred_time %>% mutate(sales=pred_sales2)
sales1_plot +
geom_line(data = prediction2, aes(x = time, y = sales, colour="red"))
summary(nlm2)
sales30 <- readr::read_csv("sales30.csv", show_col_types = FALSE) %>% mutate(id = as.factor(id))
rmarkdown::paged_table(sales30)
sales30_plot <- ggplot(data = sales30, aes(x = time, y = y, colours=id)) +
geom_point() +
xlab("Time") +
ylab("Quarterly sales volume") +
theme_bw()
sales30_plot
sales30_plot <- ggplot(data = sales30, aes(x = time, y = y, color=id)) +
geom_point() +
xlab("Time") +
ylab("Quarterly sales volume") +
theme_bw()
sales30_plot
sales30_plot <- ggplot(data = sales30, aes(x = time, y = y, color=id)) +
geom_line() +
xlab("Time") +
ylab("Quarterly sales volume") +
theme_bw()
sales30_plot
sales30_plot <- ggplot(data = sales30, aes(x = time, y = y)) +
geom_line() + facet_wrap(~id, ncol=4)
xlab("Time") +
ylab("Quarterly sales volume") +
theme_bw()
sales30_plot <- ggplot(data = sales30, aes(x = time, y = y)) +
geom_line() + facet_wrap(~id, ncol=4) +
xlab("Time") +
ylab("Quarterly sales volume") +
theme_bw()
sales30_plot
sales30_plot <- ggplot(data = sales30, aes(x = time, y = y, color=id)) +
geom_line() + facet_wrap(~id, ncol=2) +
xlab("Time") +
ylab("Quarterly sales volume") +
theme_bw()
sales30_plot
sales30_plot <- ggplot(data = sales30, aes(x = time, y = y, color=id)) +
geom_line() + facet_wrap(~id) +
xlab("Time") +
ylab("Quarterly sales volume") +
theme_bw()
sales30_plot
nlm30_1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales30,
start = c(k=0.3, b=100, A=5, T=10, phi=1))
nlm30_1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales30,
start = c(k=0.2, b=100, A=5, T=5, phi=1))
nlm30_1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales30,
start = c(k=0.2, b=100, A=5, T=5, phi=1))
nlm30_1
library(tidyverse)
library(pwr) # power study
library(saemix)
saemix_data <- saemixData(name.data       = sales30,
name.group      = "id",
name.predictors = "time",
name.response   = "y")
sales30
model1_nlme <- function(psi,id,x) {
t   <- x[,1]
k  <- psi[id,1]
A   <- psi[id,2]
b  <- psi[id,3]
T <-psi[id,4]
phi <- psi[id,5]
fpred <- k*t + b + A*cos(t*2*pi/T + phi)
fpred
}
saemix_model1 <- saemixModel(model = model1_nlme,
psi0  = c(k=0.3,A=2,b=100,T=11,phi=1))
saemix_data <- saemixData(name.data       = sales30,
name.group      = "id",
name.predictors = "time",
name.response   = "y")
model1_nlme <- function(psi,id,x) {
t   <- x[,1]
k  <- psi[id,1]
A   <- psi[id,2]
b  <- psi[id,3]
T <-psi[id,4]
phi <- psi[id,5]
fpred <- k*t + b + A*cos(t*2*pi/T + phi)
fpred
}
saemix_model1 <- saemixModel(model = model1_nlme,
psi0  = c(k=0.3,A=2,b=100,T=11,phi=1))
saemix_options <- list(map=TRUE, fim=TRUE, ll.is=FALSE, displayProgress=FALSE, save=FALSE, seed=632544)
saemix_fit1    <- saemix(saemix_model1, saemix_data, saemix_options)
saemix.plot.fits(saemix_fit1)
saemix_data <- saemixData(name.data       = sales30,
name.group      = "id",
name.predictors = "time",
name.response   = "y")
model1_nlme <- function(psi,id,x) {
t   <- x[,1]
k  <- psi[id,1]
A   <- psi[id,2]
b  <- psi[id,3]
T <-psi[id,4]
phi <- psi[id,5]
fpred <- k*t + b + A*cos(t*2*pi/T + phi)
fpred
}
saemix_model1 <- saemixModel(model = model1_nlme,
psi0  = c(k=0.3,A=2,b=100,T=11,phi=1))
saemix_options <- list(map=TRUE, fim=TRUE, ll.is=FALSE, displayProgress=FALSE, save=FALSE, seed=632544)
saemix_fit1    <- saemix(saemix_model1, saemix_data, saemix_options)
saemix.plot.fits(saemix_fit1)
saemix_data <- saemixData(name.data       = sales30,
name.group      = "id",
name.predictors = "time",
name.response   = "y")
model1_nlme <- function(psi,id,x) {
t   <- x[,1]
k  <- psi[,1]
A   <- psi[id,2]
b  <- psi[,3]
T <-psi[id,4]
phi <- psi[id,5]
fpred <- k*t + b + A*cos(t*2*pi/T + phi)
fpred
}
saemix_model1 <- saemixModel(model = model1_nlme,
psi0  = c(k=0.3,A=2,b=100,T=11,phi=1))
saemix_options <- list(map=TRUE, fim=TRUE, ll.is=FALSE, displayProgress=FALSE, save=FALSE, seed=632544)
saemix_fit1    <- saemix(saemix_model1, saemix_data, saemix_options)
saemix.plot.fits(saemix_fit1)
saemix_data <- saemixData(name.data       = sales30,
name.group      = "id",
name.predictors = "time",
name.response   = "y")
model1_nlme <- function(psi,id,x) {
t   <- x[,1]
k  <- psi[id,1]
A   <- psi[id,2]
b  <- psi[id,3]
T <-psi[id,4]
phi <- psi[id,5]
fpred <- k*t + b + A*cos(t*2*pi/T + phi)
fpred
}
saemix_model1 <- saemixModel(model = model1_nlme,
psi0  = c(k=0.3,A=2,b=100,T=11,phi=1))
saemix_options <- list(map=TRUE, fim=TRUE, ll.is=FALSE, displayProgress=FALSE, save=FALSE, seed=632544)
saemix_fit1    <- saemix(saemix_model1, saemix_data, saemix_options)
saemix.plot.fits(saemix_fit1)
model2_nlme <- function(psi,id,x) {
t   <- x[,1]
k  <- psi[id,1]
A   <- psi[id,2]
T <-psi[id,3]
phi <- psi[id,4]
fpred <- k*t + A*(cos(t*2*pi/T + phi) - cos(phi)) + 100
fpred
}
saemix_model2 <- saemixModel(model = model2_nlme,
psi0  = c(k=0.3,A=2,T=11,phi=1))
saemix_fit2 <- saemix(saemix_model2, saemix_data, saemix_options)
saemix.plot.fits(saemix_fit2)
nlm30_1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales30,
start = c(k=0.2, b=100, A=5, T=5, phi=1))
summary(nlm30_1)
nlm30_1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales30,
start = c(k=0.2, b=100, A=5, T=11, phi=1))
summary(nlm30_1)
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
sales30_plot +
geom_line(data = prediction30_1, aes(x = time, y = sales, colour="red"))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
sales30_plot +
geom_line(data = prediction30_1, aes(x = time, y = sales, colour="black"))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
sales30_plot +
geom_line(data = prediction30_1, aes(x = time, y = sales, color="black"))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
ggplot(data = sales30, aes(x = time, y = y, color=id)) +
geom_point() + facet_wrap(~id) +
theme_bw() +
geom_line(data = prediction30_1, aes(x = time, y = sales, color="black"))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
ggplot(data = sales30, aes(x = time, y = y, color=id)) +
geom_point(size=2) + facet_wrap(~id) +
theme_bw() +
geom_line(data = prediction30_1, aes(x = time, y = sales, color="black"))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
ggplot(data = sales30, aes(x = time, y = y, color=id)) +
geom_point(size=2) + facet_wrap(~id) +
theme_bw() +
geom_line(data = prediction30_1, aes(x = time, y = sales, colour="black"))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
ggplot(data = sales30, aes(x = time, y = y, color='black')) +
geom_line(size=2) + facet_wrap(~id) +
theme_bw() +
geom_line(data = prediction30_1, aes(x = time, y = sales))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
ggplot(data = sales30, aes(x = time, y = y, color='black')) +
geom_line(size=2) + facet_wrap(~id) +
theme_bw() +
geom_line(data = prediction30_1, aes(x = time, y = sales), colour='#339900')
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
ggplot(data = sales30, aes(x = time, y = y)) +
geom_line(size=1) + facet_wrap(~id) +
theme_bw() +
geom_line(data = prediction30_1, aes(x = time, y = sales), colour='#339900')
library(tidyverse)
library(pwr) # power study
library(saemix)
MON810 <- readr::read_csv("MON810.csv", show_col_types = FALSE)
rmarkdown::paged_table(MON810)
# plot the calcium level of period 2 for males and females
MON810_clean <- MON810 %>% filter (!is.na(`CALCIUM blood`))
MON810_clean %>% filter (period == 2) %>%
ggplot(aes(x=sex, y=`CALCIUM blood`, colour=`CALCIUM blood`, fill=`CALCIUM blood`)) +
geom_boxplot(alpha=0.5, outlier.alpha=0) +
geom_jitter(width=0.25) +
stat_summary(fun=mean, colour="red", geom="point",shape=18, size=3) + #red point is the mean
xlab("sex") +
ylab("CALCIUM blood") +
ggtitle('level of calcium in period 2 for males and females') +
theme_bw()
alpha <- 0.05
x <- MON810_clean %>% filter (period == 2 & sex == 'F') %>% pull("CALCIUM blood")
y <- MON810_clean %>% filter (period == 2 & sex == 'M') %>% pull("CALCIUM blood")
cat('Variance of x is ', var(x), '\n')
cat('Variance of y is ', var(y), '\n')
# we assume different variance, based on the variance of samples
t.test(x, y, conf.level = 1-alpha, var.equal = FALSE)
MON810_clean %>% filter (sex == 'M') %>%
ggplot(aes(x=as.factor(period), y=`CALCIUM blood`, colour=`CALCIUM blood`, fill=`CALCIUM blood`)) +
geom_boxplot(alpha=0.5, outlier.alpha=0) +
geom_jitter(width=0.25) +
stat_summary(fun=mean, colour="red", geom="point",shape=18, size=3) + #red point is the mean
xlab("period") +
ylab("CALCIUM blood") +
ggtitle('level of calcium for males in period 1 and period 2') +
theme_bw()
alpha <- 0.05
x <- MON810_clean %>% filter (period == 1 & sex == 'M') %>% pull("CALCIUM blood")
y <- MON810_clean %>% filter (period == 2 & sex == 'M') %>% pull("CALCIUM blood")
cat('Variance of x is ', var(x), '\n')
cat('Variance of y is ', var(y), '\n')
# we assume different variance, based on the variance of samples
t.test(x, y, conf.level = 1-alpha, var.equal = FALSE)
MON810_clean %>% filter (sex == 'M' & period == 2 & (regimen == 'control' | regimen == 'MON810')) %>%
ggplot(aes(x=regimen, y=`CALCIUM blood`, colour=`CALCIUM blood`, fill=`CALCIUM blood`)) +
geom_boxplot(alpha=0.5, outlier.alpha=0) +
geom_jitter(width=0.25) +
stat_summary(fun=mean, colour="red", geom="point",shape=18, size=3) + #red point is the mean
xlab("regimen") +
ylab("CALCIUM blood") +
ggtitle('level of calcium for males in period 2, for control group and MON810 group') +
theme_bw()
alpha <- 0.05
x <- MON810_clean %>% filter (period == 2 & sex == 'M' & regimen == 'control') %>% pull("CALCIUM blood")
y <- MON810_clean %>% filter (period == 2 & sex == 'M' & regimen == 'MON810') %>% pull("CALCIUM blood")
cat('Variance of x is ', var(x), '\n')
cat('Variance of y is ', var(y), '\n')
# we assume different variance, based on the variance of samples
t.test(x, y, conf.level = 1-alpha, var.equal = FALSE)
alpha <- 0.05
pwr.t.test(n = 10, d = 1, type = "two.sample",
alternative="two.sided", sig.level = alpha)
pwr.t.test(n = 20, d = 1, type = "two.sample",
alternative="two.sided", sig.level = alpha)
pwr.t.test(power = 0.8, d = 1, sig.level=alpha)
do_all_comparisons <- function(data, alpha) {
map(colnames(MON810_clean)[5:51],
function(col) {
# question 1
males <- filter(data, period == 2 & sex == 'M') %>% pull(col)
females <- filter(data, period == 2 & sex == 'F') %>% pull(col)
t1 <- t.test(males, females, conf.level = 1-alpha, var.equal = FALSE)
# question 2
period1 <- filter(data, period == 1 & sex == 'M') %>% pull(col)
period2 <- filter(data, period == 2 & sex == 'M') %>% pull(col)
t2 <- t.test(period1, period2, conf.level = 1-alpha, var.equal = FALSE)
# question 3
control <- filter (data, period == 2 & sex == 'M' & regimen == 'control') %>% pull(col)
g_MON810 <- filter (data, period == 2 & sex == 'M' & regimen == 'MON810') %>% pull(col)
t3 <- t.test(control, g_MON810, conf.level = 1-alpha, var.equal = FALSE)
data.frame(
Variable    = col,
p.value_q1    = t1$p.value,
p.value_q2    = t2$p.value,
p.value_q3    = t3$p.value
)
}) %>% bind_rows()
}
all_comparisons <- do_all_comparisons(MON810_clean, alpha = 0.05)
all_comparisons %>% rmarkdown::paged_table()
m <- nrow(all_comparisons)
all_comparisons$p.value_bonferonni_q1 <- pmin(1, all_comparisons$p.value_q1 * m)
all_comparisons$p.value_bonferonni_q2 <- pmin(1, all_comparisons$p.value_q2 * m)
all_comparisons$p.value_bonferonni_q3 <- pmin(1, all_comparisons$p.value_q3 * m)
all_comparisons$p.bh_q1 <- p.adjust(all_comparisons$p.value_q1, method = "BH")
all_comparisons$p.bh_q2 <- p.adjust(all_comparisons$p.value_q2, method = "BH")
all_comparisons$p.bh_q3 <- p.adjust(all_comparisons$p.value_q3, method = "BH")
all_comparisons %>% rmarkdown::paged_table()
sales1 <- readr::read_csv("sales1.csv", show_col_types = FALSE)
rmarkdown::paged_table(sales1)
sales1_plot <- ggplot(data = sales1, aes(x = time, y = y)) +
geom_point() +
xlab("Time") +
ylab("Quarterly sales volume") +
theme_bw()
sales1_plot
sales1_plot + geom_smooth(method = "lm", formula = y ~ x, se = FALSE, colour="#339900")
model1 <- lm(y~time, data=sales1)
par(mfrow=c(2,2))
plot(model1)
summary(model1)
# nlm model
nlm1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales1,
start = c(k=0.3, b=100, A=5, T=10, phi=1))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales <- predict(nlm1, newdata=pred_time)
prediction1 <- pred_time %>% mutate(sales=pred_sales)
sales1_plot +
geom_line(data = prediction1, aes(x = time, y = sales, colour="red"))
summary(nlm1)
nlm2 <- nls(y ~ k*time + A*(cos(time*2*pi/T + phi) - cos(phi)) + 100, sales1,
start = c(k=0.3, A=5, T=11, phi=5))
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales2 <- predict(nlm2, newdata=pred_time)
prediction2 <- pred_time %>% mutate(sales=pred_sales2)
sales1_plot +
geom_line(data = prediction2, aes(x = time, y = sales, colour="red"))
summary(nlm2)
sales30 <- readr::read_csv("sales30.csv", show_col_types = FALSE) %>% mutate(id = as.factor(id))
rmarkdown::paged_table(sales30)
sales30_plot <- ggplot(data = sales30, aes(x = time, y = y, color=id)) +
geom_line() + facet_wrap(~id) +
xlab("Time") +
ylab("Quarterly sales volume") +
theme_bw()
sales30_plot
nlm30_1 <- nls(y ~ k*time + b + A*cos(time*2*pi/T + phi), sales30,
start = c(k=0.2, b=100, A=5, T=11, phi=1))
summary(nlm30_1)
pred_time <- data.frame(time = seq(0, 100, by=1))
pred_sales30_1 <- predict(nlm30_1, newdata=pred_time)
prediction30_1 <- pred_time %>% mutate(sales=pred_sales30_1)
ggplot(data = sales30, aes(x = time, y = y)) +
geom_line(size=1) + facet_wrap(~id) +
theme_bw() +
geom_line(data = prediction30_1, aes(x = time, y = sales), colour='#339900')
saemix.plot.fits(saemix_fit1)
title: "MAP566 - Homework assignment #1"
format:
html:
self-contained: true
theme: [cosmo, theme.scss]
toc: true
number-sections: true
html-math-method: katex
code-copy: true
code-summary: "Show the code"
code-overflow: wrap
