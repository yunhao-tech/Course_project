library(tidyverse)
library(ggfortify) # extend some ggplot2 features
library(broom)
theme_set(theme_bw())
rat_weight <- read_csv("ratWeight.csv")
setwd("~/Desktop/MAP569/TD4")
rat_weight <- read_csv("ratWeight.csv")
rat_weight <- read_csv("ratWeight.csv")
rat_weight <- read_csv("ratWeight.csv")
setwd("~/Desktop/MAP566/data")
rat_weight <- read_csv("ratWeight.csv")
rat_plot <-
rat_weight %>% filter(regime == 'Control', gender == 'Female') %>%
ggplot() +  aes(x = week, y = weight, group = id, color = id) +
geom_line(show.legend = FALSE) + geom_point(show.legend = FALSE) +  xlab("week") + ylab("weight (grams)") +
ggtitle("Weight of the females of the control group") + theme_bw()
rat_plot
rat_B38837 = rat_weight %>% filter(id == 'B38837') %>% select(weight, week)
lm0 <- lm(weight ~ 1, data = rat_B38837)
lm1 <- lm(weight ~ poly(week, degree = 1), data = rat_B38837)
lm2 <- lm(weight ~ poly(week, degree = 2), data = rat_B38837)
lm3 <- lm(weight ~ poly(week, degree = 3), data = rat_B38837)
lm4 <- lm(weight ~ poly(week, degree = 4), data = rat_B38837)
lm5 <- lm(weight ~ poly(week, degree = 5), data = rat_B38837)
# model comparison
anova(lm0, lm1, lm2, lm3, lm4, lm5)
AIC(lm0, lm1, lm2, lm3, lm4, lm5)
BIC(lm0, lm1, lm2, lm3, lm4, lm5)
anova(lm0, lm1)
anova(lm0, lm2)
anova(lm2, lm3)
anova(lm3, lm4)
ANOVA(lm0, lm1, lm2, lm3, lm4, lm5)
ANOVA(lm0, lm1, lm2, lm3, lm4, lm5)
ANOVA(lm0)
lm0 <- lm(weight ~ 1, data = rat_B38837)
lm1 <- lm(weight ~ poly(week, degree = 1), data = rat_B38837)
lm2 <- lm(weight ~ poly(week, degree = 2), data = rat_B38837)
lm3 <- lm(weight ~ poly(week, degree = 3), data = rat_B38837)
lm4 <- lm(weight ~ poly(week, degree = 4), data = rat_B38837)
lm5 <- lm(weight ~ poly(week, degree = 5), data = rat_B38837)
# model comparison
anova(lm0, lm1, lm2, lm3, lm4, lm5)
AIC(lm0, lm1, lm2, lm3, lm4, lm5)
BIC(lm0, lm1, lm2, lm3, lm4, lm5)
avova(lm0, lm3)
anova(lm0, lm3)
anova(lm0, lm1)
anova(lm0, lm2)
View(lm0)
knitr::opts_chunk$set(fig.align = 'center',message=FALSE,warning=FALSE)
cookie.train=read.csv('Cookies_Train.csv',header=TRUE,row.names = 1)
cookie.test=read.csv('Cookies_Test.csv',header=TRUE,row.names = 1)
lambda_lasso = seq(0.001, 10,length=100)
lasso = train(sugars~., cookie.train,
method='glmnet',
tuneGrid=expand.grid(alpha=1, lambda=lambda_lasso),
trControl=custom)
# cross validation. 2/3 data for train, 1/3 data to select parameter lambda. repeat 5 times
custom=trainControl(method='repeatedcv',number=3,repeats=5)
knitr::opts_chunk$set(fig.align = 'center',message=FALSE,warning=FALSE)
library(pls)
library(MASS)
library(lasso2)
library(caret)
library(glmnet)
library(mlbench)
library(psych)
library(pls)
set.seed(2021)
# cross validation. 2/3 data for train, 1/3 data to select parameter lambda. repeat 5 times
custom=trainControl(method='repeatedcv',number=3,repeats=5)
dim(cookie.train)
# 40 samples, 701 features
lambda_lasso = seq(0.001, 10,length=100)
lasso = train(sugars~., cookie.train,
method='glmnet',
tuneGrid=expand.grid(alpha=1, lambda=lambda_lasso),
trControl=custom)
lasso$bestTune
plot(lasso)
plot(lasso$finalModel,xvar='lambda', label=T)
plot(lasso$finalModel,xvar='dev',label=T)
plot(lasso$finalModel,xvar='lambda', label=T)
lambda_lasso = seq(0.001,1,length=100)
lasso = train(sugars~., cookie.train,
method='glmnet',
tuneGrid=expand.grid(alpha=1, lambda=lambda_lasso),
trControl=custom)
lasso$bestTune
plot(lasso)
plot(lasso$finalModel,xvar='lambda', label=T)
plot(lasso$finalModel,xvar='dev',label=T)
lambda_lasso = seq(0.001,10,length=100)
lasso = train(sugars~., cookie.train,
method='glmnet',
tuneGrid=expand.grid(alpha=1, lambda=lambda_lasso),
trControl=custom)
lasso$bestTune
plot(lasso)
lambda_ridge = seq(0.001,13,length=100)
ridge = train(sugars~., cookie.train,
method='glmnet',
tuneGrid=expand.grid(alpha=0, lambda=lambda_ridge),
trControl=custom)
ridge
plot(ridge)
ridge$bestTune
lambda_ridge = seq(0.001,13,length=100)
ridge = train(sugars~., cookie.train,
method='glmnet',
tuneGrid=expand.grid(alpha=0, lambda=lambda_ridge),
trControl=custom)
ridge
set.seed(2021)
lambda_ridge = seq(0.001,13,length=100)
ridge = train(sugars~., cookie.train,
method='glmnet',
tuneGrid=expand.grid(alpha=0, lambda=lambda_ridge),
trControl=custom)
ridge
plot(ridge)
ridge$bestTune
lambda_ridge = seq(10,15,length=100)
ridge = train(sugars~., cookie.train,
method='glmnet',
tuneGrid=expand.grid(alpha=0, lambda=lambda_ridge),
trControl=custom)
ridge
plot(ridge)
ridge$bestTune
lambda_ridge = seq(10,20,length=100)
ridge = train(sugars~., cookie.train,
method='glmnet',
tuneGrid=expand.grid(alpha=0, lambda=lambda_ridge),
trControl=custom)
ridge
plot(ridge)
ridge$bestTune
alpha_Enet = seq(0, 0.5, length=20)
lambda_Enet = seq(0.01, 0.35, length=20)
ElNet = train(sugars~.,cookie.train, method='glmnet',
tuneGrid=expand.grid(alpha=alpha_Enet, lambda=lambda_Enet),
trControl=custom)
ElNet
RMSE_lasso_train = sqrt(mean((fitted(lasso)-Ytrain)^2))
plot(ElNet)
ElNet$bestTune
